class Solution {
    public boolean solution(int[][] key, int[][] lock) {
        boolean answer = false;
        int locklen=lock.length;
        int keylen=key.length;
        
        //한칸씩 이동하면서
        for(int i=0;i<locklen+keylen-1;i++){
            for(int j=0;j<locklen+keylen-1;j++){
                for(int d=0;d<4;d++){
                    
                    int map[][]=new int[locklen+(keylen-1)*2][locklen+(keylen-1)*2];
                    //자물쇠 가운데 놔주고
                    for(int r=0;r<locklen;r++){
                        for(int c=0;c<locklen;c++){
                            map[r+(keylen-1)][c+(keylen-1)]=lock[r][c];
                        }
                    }
                    
                    //90도 4번돌려주고 검사
                    int rotate[][]=rotate(d,key);
                    if(check(map,rotate,i,j,locklen,keylen))
                        answer=true;
                }
            }
        }
        return answer;
    }
    public static boolean check(int[][] map, int[][] rotate,
                                int r,int c,int locklen, int keylen){
        boolean flag=true;
        for(int i=0;i<rotate.length;i++){
            for(int j=0;j<rotate.length;j++){
                 map[r+i][c+j]+=rotate[i][j];
            }
        }
        
        for(int i=0;i<locklen;i++){
            for(int j=0;j<locklen;j++){
                if(map[i+(keylen-1)][j+(keylen-1)]!=1)
                    flag=false;
            }
       }
        return flag;
    }
    
    public static int[][] rotate(int d, int[][]key){
        int len=key.length;
        int tmp[][]=new int[len][len];
        switch(d){
            //90도
            case 0:
                for(int i=0;i<len;i++){
                    for(int j=0;j<len;j++){
                        tmp[j][(len-1)-i]=key[i][j];
                    }
                }
                break;
            //180도
            case 1:
                for(int i=0;i<len;i++){
                    for(int j=0;j<len;j++){
                        tmp[(len-1)-i][(len-1)-j]=key[i][j];
                    }
                }
                break;
            //270도
            case 2:
                 for(int i=0;i<len;i++){
                    for(int j=0;j<len;j++){
                        tmp[(len-1)-j][i]=key[i][j];
                    }
                }
                break;
            //360도
            case 3:
                for(int i=0;i<len;i++){
                    for(int j=0;j<len;j++){
                        tmp[i][j]=key[i][j];
                    }
                }
                break;
        }
        return tmp;
    }
}