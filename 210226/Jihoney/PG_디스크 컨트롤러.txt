import java.util.*;

class Solution {
    static PriorityQueue<task> pq=new PriorityQueue<>();
    static ArrayList<task> list=new ArrayList<>();
    public int solution(int[][] jobs) {
        int answer = 0;
        int cur=0;
        for(int i=0;i<jobs.length;i++){
            pq.add(new task(jobs[i][0],jobs[i][1]));
        }
        int size=pq.size();
        for(int i=0;i<size;i++){
            list.add(pq.poll());
        }
        
        while(list.size()!=0){
            boolean flag=false;
            for(int i=0;i<list.size();i++){
                task t=list.get(i);
                if(t.start<=cur){
                    flag=true;
                    cur+=t.time;
                    answer+=(cur-t.start);
                    list.remove(i);
                    break;
                }
            }
            if(!flag){
                cur++;
            }
        }
        answer=answer/size;
        return answer;
    }
}

class task implements Comparable<task>{
    int start;
    int time;
    
    public task(int start,int time){
        this.start=start;
        this.time=time;
    }
    
    public int compareTo(task o){
        if(this.time<o.time){
            return -1;
        }else if(this.time==o.time){
            if(this.start<o.start){
                return -1;
            }else if(this.start==o.start){
                return 0;
            }else
                return 1;
        }else
            return 1;
    }
    
}